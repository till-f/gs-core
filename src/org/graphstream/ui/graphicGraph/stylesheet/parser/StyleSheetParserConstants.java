/* Generated By:JavaCC: Do not edit this line. StyleSheetParserConstants.java */
/*
 * Copyright 2006 - 2012
 *     Stefan Balev     <stefan.balev@graphstream-project.org>
 *     Julien Baudry	<julien.baudry@graphstream-project.org>
 *     Antoine Dutot	<antoine.dutot@graphstream-project.org>
 *     Yoann Pign√©		<yoann.pigne@graphstream-project.org>
 *     Guilhelm Savin	<guilhelm.savin@graphstream-project.org>
 * 
 * This file is part of GraphStream <http://graphstream-project.org>.
 * 
 * GraphStream is a library whose purpose is to handle static or dynamic
 * graph, create them from scratch, file or any source and display them.
 * 
 * This program is free software distributed under the terms of two licenses, the
 * CeCILL-C license that fits European law, and the GNU Lesser General Public
 * License. You can  use, modify and/ or redistribute the software under the terms
 * of the CeCILL-C license as circulated by CEA, CNRS and INRIA at the following
 * URL <http://www.cecill.info> or under the terms of the GNU LGPL as published by
 * the Free Software Foundation, either version 3 of the License, or (at your
 * option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * The fact that you are presently reading this means that you have had
 * knowledge of the CeCILL-C and LGPL licenses and that you accept their terms.
 */
package org.graphstream.ui.graphicGraph.stylesheet.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface StyleSheetParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int EOL = 5;
  /** RegularExpression Id. */
  int DIGIT = 6;
  /** RegularExpression Id. */
  int HEXDIGIT = 7;
  /** RegularExpression Id. */
  int UNITS = 8;
  /** RegularExpression Id. */
  int DOT = 9;
  /** RegularExpression Id. */
  int LBRACE = 10;
  /** RegularExpression Id. */
  int RBRACE = 11;
  /** RegularExpression Id. */
  int LPAREN = 12;
  /** RegularExpression Id. */
  int RPAREN = 13;
  /** RegularExpression Id. */
  int SHARP = 14;
  /** RegularExpression Id. */
  int COLON = 15;
  /** RegularExpression Id. */
  int SEMICOLON = 16;
  /** RegularExpression Id. */
  int COMA = 17;
  /** RegularExpression Id. */
  int RGBA = 18;
  /** RegularExpression Id. */
  int RGB = 19;
  /** RegularExpression Id. */
  int HTMLCOLOR = 20;
  /** RegularExpression Id. */
  int REAL = 21;
  /** RegularExpression Id. */
  int STRING = 22;
  /** RegularExpression Id. */
  int URL = 23;
  /** RegularExpression Id. */
  int GRAPH = 24;
  /** RegularExpression Id. */
  int EDGE = 25;
  /** RegularExpression Id. */
  int NODE = 26;
  /** RegularExpression Id. */
  int SPRITE = 27;
  /** RegularExpression Id. */
  int FILLMODE = 28;
  /** RegularExpression Id. */
  int FILLCOLOR = 29;
  /** RegularExpression Id. */
  int FILLIMAGE = 30;
  /** RegularExpression Id. */
  int STROKEMODE = 31;
  /** RegularExpression Id. */
  int STROKECOLOR = 32;
  /** RegularExpression Id. */
  int STROKEWIDTH = 33;
  /** RegularExpression Id. */
  int SHADOWMODE = 34;
  /** RegularExpression Id. */
  int SHADOWCOLOR = 35;
  /** RegularExpression Id. */
  int SHADOWWIDTH = 36;
  /** RegularExpression Id. */
  int SHADOWOFFSET = 37;
  /** RegularExpression Id. */
  int TEXTMODE = 38;
  /** RegularExpression Id. */
  int TEXTCOLOR = 39;
  /** RegularExpression Id. */
  int TEXTSTYLE = 40;
  /** RegularExpression Id. */
  int TEXTFONT = 41;
  /** RegularExpression Id. */
  int TEXTSIZE = 42;
  /** RegularExpression Id. */
  int TEXTVISIBILITYMODE = 43;
  /** RegularExpression Id. */
  int TEXTVISIBILITY = 44;
  /** RegularExpression Id. */
  int TEXTBACKGROUNDMODE = 45;
  /** RegularExpression Id. */
  int TEXTBACKGROUNDCOLOR = 46;
  /** RegularExpression Id. */
  int TEXTOFFSET = 47;
  /** RegularExpression Id. */
  int TEXTPADDING = 48;
  /** RegularExpression Id. */
  int ICONMODE = 49;
  /** RegularExpression Id. */
  int ICON = 50;
  /** RegularExpression Id. */
  int PADDING = 51;
  /** RegularExpression Id. */
  int ZINDEX = 52;
  /** RegularExpression Id. */
  int VISIBILITYMODE = 53;
  /** RegularExpression Id. */
  int VISIBILITY = 54;
  /** RegularExpression Id. */
  int SHAPE = 55;
  /** RegularExpression Id. */
  int SIZE = 56;
  /** RegularExpression Id. */
  int SIZEMODE = 57;
  /** RegularExpression Id. */
  int SHAPEPOINTS = 58;
  /** RegularExpression Id. */
  int TEXTALIGNMENT = 59;
  /** RegularExpression Id. */
  int JCOMPONENT = 60;
  /** RegularExpression Id. */
  int ARROWIMGURL = 61;
  /** RegularExpression Id. */
  int ARROWSIZE = 62;
  /** RegularExpression Id. */
  int ARROWSHAPE = 63;
  /** RegularExpression Id. */
  int ARROWORIENT = 64;
  /** RegularExpression Id. */
  int SPRITEORIENT = 65;
  /** RegularExpression Id. */
  int CANVASCOLOR = 66;
  /** RegularExpression Id. */
  int PLAIN = 67;
  /** RegularExpression Id. */
  int DYNPLAIN = 68;
  /** RegularExpression Id. */
  int DYNSIZE = 69;
  /** RegularExpression Id. */
  int DYNICON = 70;
  /** RegularExpression Id. */
  int DASHES = 71;
  /** RegularExpression Id. */
  int DOTS = 72;
  /** RegularExpression Id. */
  int DOUBLE = 73;
  /** RegularExpression Id. */
  int GRADIENTDIAGONAL1 = 74;
  /** RegularExpression Id. */
  int GRADIENTDIAGONAL2 = 75;
  /** RegularExpression Id. */
  int GRADIENTHORIZONTAL = 76;
  /** RegularExpression Id. */
  int GRADIENTRADIAL = 77;
  /** RegularExpression Id. */
  int GRADIENTVERTICAL = 78;
  /** RegularExpression Id. */
  int HIDDEN = 79;
  /** RegularExpression Id. */
  int IMAGETILED = 80;
  /** RegularExpression Id. */
  int IMAGESCALED = 81;
  /** RegularExpression Id. */
  int IMAGESCALEDRATIOMAX = 82;
  /** RegularExpression Id. */
  int IMAGESCALEDRATIOMIN = 83;
  /** RegularExpression Id. */
  int NONE = 84;
  /** RegularExpression Id. */
  int NORMAL = 85;
  /** RegularExpression Id. */
  int TRUNCATED = 86;
  /** RegularExpression Id. */
  int ZOOMRANGE = 87;
  /** RegularExpression Id. */
  int ATZOOM = 88;
  /** RegularExpression Id. */
  int UNDERZOOM = 89;
  /** RegularExpression Id. */
  int OVERZOOM = 90;
  /** RegularExpression Id. */
  int ZOOMS = 91;
  /** RegularExpression Id. */
  int FIT = 92;
  /** RegularExpression Id. */
  int BOLD = 93;
  /** RegularExpression Id. */
  int BOLD_ITALIC = 94;
  /** RegularExpression Id. */
  int ITALIC = 95;
  /** RegularExpression Id. */
  int ALONG = 96;
  /** RegularExpression Id. */
  int ATLEFT = 97;
  /** RegularExpression Id. */
  int ATRIGHT = 98;
  /** RegularExpression Id. */
  int CENTER = 99;
  /** RegularExpression Id. */
  int LEFT = 100;
  /** RegularExpression Id. */
  int RIGHT = 101;
  /** RegularExpression Id. */
  int UNDER = 102;
  /** RegularExpression Id. */
  int ABOVE = 103;
  /** RegularExpression Id. */
  int JUSTIFY = 104;
  /** RegularExpression Id. */
  int CIRCLE = 105;
  /** RegularExpression Id. */
  int TRIANGLE = 106;
  /** RegularExpression Id. */
  int FREEPLANE = 107;
  /** RegularExpression Id. */
  int TEXTBOX = 108;
  /** RegularExpression Id. */
  int TEXTROUNDEDBOX = 109;
  /** RegularExpression Id. */
  int TEXTCIRCLE = 110;
  /** RegularExpression Id. */
  int TEXTDIAMOND = 111;
  /** RegularExpression Id. */
  int TEXTPARAGRAPH = 112;
  /** RegularExpression Id. */
  int BOX = 113;
  /** RegularExpression Id. */
  int ROUNDEDBOX = 114;
  /** RegularExpression Id. */
  int CROSS = 115;
  /** RegularExpression Id. */
  int DIAMOND = 116;
  /** RegularExpression Id. */
  int POLYGON = 117;
  /** RegularExpression Id. */
  int BUTTON = 118;
  /** RegularExpression Id. */
  int TEXTFIELD = 119;
  /** RegularExpression Id. */
  int PANEL = 120;
  /** RegularExpression Id. */
  int LINE = 121;
  /** RegularExpression Id. */
  int POLYLINE = 122;
  /** RegularExpression Id. */
  int POLYLINESCALED = 123;
  /** RegularExpression Id. */
  int ANGLE = 124;
  /** RegularExpression Id. */
  int CUBICCURVE = 125;
  /** RegularExpression Id. */
  int BLOB = 126;
  /** RegularExpression Id. */
  int SQUARELINE = 127;
  /** RegularExpression Id. */
  int LSQUARELINE = 128;
  /** RegularExpression Id. */
  int HSQUARELINE = 129;
  /** RegularExpression Id. */
  int VSQUARELINE = 130;
  /** RegularExpression Id. */
  int ARROW = 131;
  /** RegularExpression Id. */
  int FLOW = 132;
  /** RegularExpression Id. */
  int PIECHART = 133;
  /** RegularExpression Id. */
  int IMAGE = 134;
  /** RegularExpression Id. */
  int IMAGES = 135;
  /** RegularExpression Id. */
  int ASEDGE = 136;
  /** RegularExpression Id. */
  int OPPOSITE = 137;
  /** RegularExpression Id. */
  int FROM = 138;
  /** RegularExpression Id. */
  int NODE0 = 139;
  /** RegularExpression Id. */
  int TO = 140;
  /** RegularExpression Id. */
  int NODE1 = 141;
  /** RegularExpression Id. */
  int PROJECTION = 142;
  /** RegularExpression Id. */
  int CLICKED = 143;
  /** RegularExpression Id. */
  int SELECTED = 144;
  /** RegularExpression Id. */
  int IDENTIFIER = 145;
  /** RegularExpression Id. */
  int COMMENT = 146;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<EOL>",
    "<DIGIT>",
    "<HEXDIGIT>",
    "<UNITS>",
    "\".\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"#\"",
    "\":\"",
    "\";\"",
    "\",\"",
    "\"rgba\"",
    "\"rgb\"",
    "<HTMLCOLOR>",
    "<REAL>",
    "<STRING>",
    "\"url\"",
    "\"graph\"",
    "\"edge\"",
    "\"node\"",
    "\"sprite\"",
    "\"fill-mode\"",
    "\"fill-color\"",
    "\"fill-image\"",
    "\"stroke-mode\"",
    "\"stroke-color\"",
    "\"stroke-width\"",
    "\"shadow-mode\"",
    "\"shadow-color\"",
    "\"shadow-width\"",
    "\"shadow-offset\"",
    "\"text-mode\"",
    "\"text-color\"",
    "\"text-style\"",
    "\"text-font\"",
    "\"text-size\"",
    "\"text-visibility-mode\"",
    "\"text-visibility\"",
    "\"text-background-mode\"",
    "\"text-background-color\"",
    "\"text-offset\"",
    "\"text-padding\"",
    "\"icon-mode\"",
    "\"icon\"",
    "\"padding\"",
    "\"z-index\"",
    "\"visibility-mode\"",
    "\"visibility\"",
    "\"shape\"",
    "\"size\"",
    "\"size-mode\"",
    "\"shape-points\"",
    "\"text-alignment\"",
    "\"jcomponent\"",
    "\"arrow-image\"",
    "\"arrow-size\"",
    "\"arrow-shape\"",
    "\"arrow-orientation\"",
    "\"sprite-orientation\"",
    "\"canvas-color\"",
    "\"plain\"",
    "\"dyn-plain\"",
    "\"dyn-size\"",
    "\"dyn-icon\"",
    "\"dashes\"",
    "\"dots\"",
    "\"double\"",
    "\"gradient-diagonal1\"",
    "\"gradient-diagonal2\"",
    "\"gradient-horizontal\"",
    "\"gradient-radial\"",
    "\"gradient-vertical\"",
    "\"hidden\"",
    "\"image-tiled\"",
    "\"image-scaled\"",
    "\"image-scaled-ratio-max\"",
    "\"image-scaled-ratio-min\"",
    "\"none\"",
    "\"normal\"",
    "\"truncated\"",
    "\"zoom-range\"",
    "\"at-zoom\"",
    "\"under-zoom\"",
    "\"over-zoom\"",
    "\"zooms\"",
    "\"fit\"",
    "\"bold\"",
    "\"bold-italic\"",
    "\"italic\"",
    "\"along\"",
    "\"at-left\"",
    "\"at-right\"",
    "\"center\"",
    "\"left\"",
    "\"right\"",
    "\"under\"",
    "\"above\"",
    "\"justify\"",
    "\"circle\"",
    "\"triangle\"",
    "\"freeplane\"",
    "\"text-box\"",
    "\"text-rounded-box\"",
    "\"text-circle\"",
    "\"text-diamond\"",
    "\"text-paragraph\"",
    "\"box\"",
    "\"rounded-box\"",
    "\"cross\"",
    "\"diamond\"",
    "\"polygon\"",
    "\"button\"",
    "\"text-field\"",
    "\"panel\"",
    "\"line\"",
    "\"polyline\"",
    "\"polyline-scaled\"",
    "\"angle\"",
    "\"cubic-curve\"",
    "\"blob\"",
    "\"square-line\"",
    "\"L-square-line\"",
    "\"horizontal-square-line\"",
    "\"vertical-square-line\"",
    "\"arrow\"",
    "\"flow\"",
    "\"pie-chart\"",
    "\"image\"",
    "\"images\"",
    "\"as-edge\"",
    "\"opposite\"",
    "\"from\"",
    "\"node0\"",
    "\"to\"",
    "\"node1\"",
    "\"projection\"",
    "\"clicked\"",
    "\"selected\"",
    "<IDENTIFIER>",
    "<COMMENT>",
  };

}
